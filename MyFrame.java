/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;
import Classes.Gui;
import Classes.GuessNum;
import java.awt.Toolkit;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;



/**
 *
 * @author HP ELITEBOOK 8470P
 */
public class MyFrame extends javax.swing.JFrame {

    /**
     * Creates new form MyFrame
     */
    public MyFrame() {
        initComponents();
        init();
      //  setUndecorated(true);
       // setAlwaysOnTop(true);
        setResizable(true);
        setVisible(true);
        /*Toolkit tk=Toolkit.getDefaultToolkit();
        int x=(int) tk.getScreenSize().getWidth();
        int y=(int) tk.getScreenSize().getHeight();
        setSize(x,y);
        setExtendedState(MyFrame.MAXIMIZED_BOTH);*/
  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();

        jCheckBox1.setText("jCheckBox1");

        jButton1.setText("jButton1");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("?");
        jLabel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel10.setName("?"); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GUESSING GAME");
        setBackground(new java.awt.Color(0, 255, 255));
        setBounds(new java.awt.Rectangle(360, 85, 900, 560));
        setForeground(new java.awt.Color(0, 255, 255));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setPreferredSize(new java.awt.Dimension(1012, 658));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assest/icons8-reset-94.png"))); // NOI18N
        jLabel1.setToolTipText("Reset");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 90, 80));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Best Score: 0");
        jLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 70, 170, 30));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 204));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Guessing Game");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 440, 50));

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 950, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assest/icons8-search-94.png"))); // NOI18N
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 150, 200, 170));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Score: 0");
        jLabel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 170, 90, 30));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Guesses: 0");
        jLabel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 170, 100, 30));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Life: 10");
        jLabel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.NW_RESIZE_CURSOR));
        jLabel7.setRequestFocusEnabled(false);
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 170, 100, 30));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Enter Your Number(1-100)");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, 400, -1));

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 260, 210, 30));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("?");
        jLabel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel11.setName("?"); // NOI18N
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 260, 60, 30));

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assest/icons8-eye-30.png"))); // NOI18N
        jLabel12.setToolTipText("View");
        jLabel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 260, 60, 30));

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assest/icons8-invisible-30.png"))); // NOI18N
        jLabel9.setToolTipText("Hide");
        jLabel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 260, 50, 30));

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assest/icons8-shuffle-32.png"))); // NOI18N
        jButton2.setText("New Random Number");
        jButton2.setToolTipText("Random Number");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 320, 210, 40));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assest/icons8-verified-badge-48.png"))); // NOI18N
        jButton3.setText("Guess");
        jButton3.setToolTipText("Your Guess");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 320, 120, 50));

        jLabel13.setBackground(new java.awt.Color(153, 0, 0));
        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("...............................Try Your Luck :)..............................................");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 400, 920, 40));

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
  // TODO add your handling code here:
    randomNew();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        guess();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        // TODO add your handling code here:
        jLabel12.setEnabled(false);
        jLabel9.setEnabled(true);
        jLabel11.setText(String.valueOf(random));
    }//GEN-LAST:event_jLabel12MouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
            // TODO add your handling code here:
        jLabel12.setEnabled(true);
        jLabel9.setEnabled(false);
        jLabel11.setText(String.valueOf("?"));
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
        Gui._integerOnly(evt);
        
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        Object[] options={"YES","NO"};
        int x=JOptionPane.showOptionDialog(this,"Are you sure you want to reset (yes/no)?",
                "MESSAGE",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,options,null);
        if(x==JOptionPane.YES_OPTION){
        reset();
        }
        else{
        System.exit(0);
        }
    }//GEN-LAST:event_jLabel1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
        Gui gui;
        private int random=0,bestScore=0,yourScore=0,addCorrectScore=0;
        private byte guessCount=0,lifeCount=10,greaterThanError=0,lessThanError=0;
        private void init(){
           gui=new Gui(); 
           Gui._centerFrame(this);
           gui.setIconFrame(this);
           random =GuessNum._randomNumber();
           jLabel9.setEnabled(false);
           //get best Score
           bestScore=Gui.getCurrentBestScore();
           jLabel2.setText("Best Score: "+bestScore);
          
        }
        private void randomNew(){
           random =GuessNum._randomNumber();
           jTextField1.setText(" ");
           jTextField1.requestFocus();
           jLabel9.setEnabled(false);
           jLabel12.setEnabled(true);
           jLabel11.setText("?");
           
        }
        private void guess(){
            //validate user Input
            if(jTextField1.getText().equals("")){
                Gui._message("Please Enter Your Number!", 0);
                jTextField1.requestFocus();
            }
            else if(Integer.parseInt(jTextField1.getText())>=101 || Integer.parseInt(jTextField1.getText())<=1){
                Gui._message("Please enter number from 1-100",0);
                jTextField1.setText(" ");
                jTextField1.requestFocus();
            }
            else{
                     int yourNumber = Integer.parseInt(jTextField1.getText());
                    if(yourNumber==random){
                        Gui._message("YOU WON !\nadditional 3 life was added !",1);
                        yourScore++;
                        jLabel4.setText("Score: "+yourScore);
                        //addLife
                        lifeCount+=addCorrectScore;
                        jLabel7.setText("Life: "+lifeCount);       
                        //check and update best score
                        updateBestScore();
                        //encourage user to play again
                        Object[] options={"YES, I WAN'T NOW ","NO, I AM TIRED" };
                        int x=JOptionPane.showOptionDialog(this,"Want to play again(yes/no)?",
                             "MESSAGE",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,options,null);
                            if(x==JOptionPane.YES_OPTION){
                                newGame();
                            }
                            else{
                                System.exit(0);
                            }
                        
                    }
                    else{
                        lifeCount--; 
                        jLabel7.setText("Life: "+lifeCount);
                        if(lifeCount <=4)
                        {
                            jLabel7.setIcon(new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Assest/Warning.png")))); 
                        }
                        else{
                            jLabel7.setIcon(null);
                        }
                        hint(random,yourNumber);
                        if(lifeCount == 0)
                        {
                            Gui._message("You have used all your life !\nPlease try again next time ",0);
                            
                            Object[] options={"YES, I WAN'T NOW ","NO, I AM TIRED" };
                        int x=JOptionPane.showOptionDialog(this,"Want to play again(yes/no)?",
                             "MESSAGE",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,options,null);
                            if(x==JOptionPane.YES_OPTION){
                                newGame();
                            }
                            else{
                                System.exit(0);
                            }
                         
                        }
                    }
                    //Count the guess 
                    guessCount++;
                    jLabel6.setText("Guesses: "+guessCount);
                    }
            }
        //creating hint
        private void hint(int _randomNum,int yourNumber){
            String mes;
            if(_randomNum > yourNumber){
                lessThanError++;
                mes=messageHint(lessThanError,(byte)1,yourNumber);
                jLabel13.setText(mes);
            }
            else{
                greaterThanError++;
                mes=messageHint(greaterThanError,(byte)0,yourNumber);
                jLabel13.setText(mes);
            }
        
        }
        //contains the message hint in the array
        private String messageHint(byte errorCount,byte errorCatcher,int numGuess){
            String message;
            switch(errorCatcher){
                //for less than hint
                case 1:
                    String messageCat[]={String.valueOf(numGuess)+" is Less than the number! please be observant!",
                    String.valueOf(numGuess)+" is Less than the number! don't you know how to compute?",
                    String.valueOf(numGuess)+" is Less than the number! Oh! Come ON!! ",
                    String.valueOf(numGuess)+" is Less than the number! I'm tired for reminding !",};
                    if(errorCount <2){
                        message=String.valueOf(numGuess)+" is less than the random number!";
                        
                    }
                    else{
                        int randomMes = (int) Math.round(Math.random()*3);
                        message=messageCat[randomMes];
                    }
                    break;
                    //for greater than
                default:
                    String messageCat1[]={String.valueOf(numGuess)+" is Greater than the number! please be observant!",
                    String.valueOf(numGuess)+" is Greater than the number! don't you know how to compute?",
                    String.valueOf(numGuess)+" is Greater than the number! Oh! Come ON!! ",
                    String.valueOf(numGuess)+" is Greater than the number! I'm tired for reminding !",};
                    if(errorCount <3){
                        message=String.valueOf(numGuess)+" is Greater than the random number!";
                        
                    }
                    else{
                        int randomMes = (int) Math.round(Math.random()*3);
                        message=messageCat1[randomMes];
                    }
                    break;
            }
            return message;
        }
        //update the best score
        private void updateBestScore(){
            if(yourScore>bestScore){
                Gui._message("Congratulations! New Best Score !",1);
                Gui.setNewBestScore("bestScore["+yourScore+"]");
                bestScore =yourScore;
                jLabel2.setText("Best Score: "+bestScore);
            }
        }
        //creating new game
        private void newGame(){
            jTextField1.setText("");
            jTextField1.requestFocus();
            jLabel13.setText("...............................Try Your Luck :)..............................................");
            jLabel9.setEnabled(false);
            jLabel12.setEnabled(true);
            jLabel11.setText("?");
            jLabel6.setText("Guesses: 0");
            guessCount=0;
            jLabel7.setText("Life: 10");
            jLabel7.setIcon(null);
            lifeCount=10;
            greaterThanError=0;
            lessThanError=0;
            random=GuessNum._randomNumber();
            
        }
         private void reset(){
            jTextField1.setText("");
            jTextField1.requestFocus();
            jLabel13.setText("...............................Try Your Luck :)..............................................");
            jLabel9.setEnabled(false);
            jLabel12.setEnabled(true);
            jLabel11.setText("?");
            jLabel6.setText("Guesses: 0");
            guessCount=0;
            jLabel7.setText("Life: 10");
            lifeCount=10;
            jLabel7.setIcon(null);
            greaterThanError=0;
            lessThanError=0;
            random=GuessNum._randomNumber();
            jLabel4.setText("Score:0");
            yourScore=0;
            //include best score to reset
            bestScore=0;
            Gui.setNewBestScore("bestScore["+bestScore+"]");
            jLabel2.setText("Best Score: 0");
            
        }
        }


